@using EPiServer.Core
@using EPiServer.Web.Routing
@model PizzeriaEpiserverSite.Models.ViewModels.BlogPageViewModel

@*@{
        Layout = "~/Views/Shared/_LeftNavigation.cshtml";
    }*@

<h1 class="blogContent" >@Html.PropertyFor(x => x.CurrentPage.PageName)</h1>
<p class="blogContent">@Html.PropertyFor(x => x.CurrentPage.StartPublish.Value)</p>
<br/>
@if (Html.PropertyFor(x => x.CurrentPage.PageImage) != null)
{
    <div class="blogImage2">@Html.PropertyFor(x => x.CurrentPage.PageImage)</div>
}
<p class="introduction">
    @Html.PropertyFor(m => m.CurrentPage.MetaDescription)
</p>
<br />
<div class="row">
    <div class="col-md-12 ">
        @Html.PropertyFor(x => x.CurrentPage.MainBody)
        @Html.PropertyFor(x => x.CurrentPage.MainListing)
    </div>
</div>

<br />

<h3>Comments</h3>
<div id="comment"></div>
    <div id="postResult"></div>


    <h3>What do you think? Write a comment!</h3>
    <form id="myForm">
        <div class="form-group">
            <label class = "col-sm-2">Author name: </label>
            <input type="text" class="form-control" id="form-authorName" />
        </div>
        <div class="form-group">
            <label class = "col-sm-2">Comment: </label>
            <textarea  rows="3" class="form-control"  id="form-comment" ></textarea>  
        </div>
        <div class="form-group">
            <div class = "col-sm-2"></div>
            <button class="btn btn-primary btn-lg "  id="form-button">Send</button>
        </div>
    </form>


        <script>
            var pageId = @Model.CurrentPage.PageLink.ID;

            $(document).ready(function() {
                //console.log($("#form-button"));
                //alert($('#form-authorName').val());

                $('#form-button').click(function(event) {
                    event.preventDefault();
                    var comment = {
                        PageId: pageId,
                        AuthorName: $('#form-authorName').val(),
                        Comment: $('#form-comment').val()
                    };
                    console.log(JSON.stringify(comment));
                    $.ajax({
                        type: "POST",
                        url: "/api/comment/post",
                        data: JSON.stringify(comment),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            location.reload();
                            //$('#postResult').html(result);
                            $("#myForm").remove();
                        }
                    });

                });
            });


            $(document).ready(function() {
                $.getJSON("/api/comment/?pageid=" + pageId,
                    function myFunction(data) {
                        var str = JSON.stringify(data, null, 2);
                        var obj = JSON.parse(str);

                        var comments = "";
                        for (var property in obj) {

                            //var date = getDateFromFormat(obj[property].Date);
                            comments += obj[property].CommentatorName +
                                "<br> " +
                                obj[property].Date.slice(0,10)
                                + "<br> "+
                                obj[property].Text + "<br><br>";
                            property++;
                        }
                        document.getElementById("comment").innerHTML = comments;
                    });
            });
        </script>



        @*@if (Model.CommentFolderIsSet)
            {
                <h3>@Html.Translate("/postedcomment/listheading")</h3>
                foreach (var c in Model.CommentList)
                {
                    ContentReference currentCommentRef = ((IContent)c).ContentLink;
                    <div class="date">
                        @Html.ActionLink(
                       Html.Translate("/postedcomment/reportcommentlink"),
                       "ReportComment",
                       new { commentReference = currentCommentRef })
                    </div>

                    Html.RenderPartial("PostedComment", c);
                }

                if (Model.HasCommentPublishAccess)
                {
                    using (Html.BeginForm("Create", null, FormMethod.Post))
                    {
                        <fieldset>
                            <legend>@Html.Translate("/postedcomment/form/fieldsetlegend")</legend>
                            @Html.Label(@Html.Translate("/postedcomment/form/commentatornamelabel"))
                            @Html.TextBox("CommentatorName")
                            @Html.Label(@Html.Translate("/postedcomment/form/commenttextlabel"))
                            @Html.TextArea("Text")
                            <input type="submit" value=@Html.Translate("/postedcomment/form/submitbutton") />
                        </fieldset>
                    }
                }
            }*@
